openapi: 3.0.1
info:
  title: Quoting related parts of Open API for FSP Interoperability (FSPIOP) (Implementation
    Friendly Version)
  description: Based on API Definition.docx updated on 2018-03-13 Version 1.0. Note
    - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
  license:
    name: Open API for FSP Interoperability (FSPIOP) (Implementation Friendly Version)
  version: "1.1"
servers:
  - url: /
paths:
  /metrics:
    get:
      tags:
        - metrics
      responses:
        '200':
          $ref: '#/components/responses/ResponseHealth200'
        '400':
          $ref: '#/components/responses/ErrorResponse400'
        '401':
          $ref: '#/components/responses/ErrorResponse401'
        '403':
          $ref: '#/components/responses/ErrorResponse403'
        '404':
          $ref: '#/components/responses/ErrorResponse404'
        '405':
          $ref: '#/components/responses/ErrorResponse405'
        '406':
          $ref: '#/components/responses/ErrorResponse406'
        '501':
          $ref: '#/components/responses/ErrorResponse501'
        '503':
          $ref: '#/components/responses/ErrorResponse503'
      operationId: MetricsGet
      summary: Get Server
      description: >-
        The HTTP request GET /health is used to return the current status of the
        API.
  /quotes/{id}/error:
    put:
      tags:
        - quotes
        - sampled
      summary: QuotesByIdAndError
      description: If the server is unable to find or create a quote, or some other
        processing error occurs, the error callback PUT /quotes/<id>/error is used.
        The <id> in the URI should contain the quoteId that was used for the creation
        of the quote, or the <id> that was used in the GET /quotes/<id>.
      operationId: QuotesErrorByIDPut
      parameters:
        - $ref: '#/components/parameters/ID'
        - $ref: '#/components/parameters/Content-Length'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Date'
        - $ref: '#/components/parameters/X-Forwarded-For'
        - $ref: '#/components/parameters/FSPIOP-Source'
        - $ref: '#/components/parameters/FSPIOP-Destination'
        - $ref: '#/components/parameters/FSPIOP-Encryption'
        - $ref: '#/components/parameters/FSPIOP-Signature'
        - $ref: '#/components/parameters/FSPIOP-URI'
        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'
      x-examples:
        application/json:
          errorInformation:
            errorCode: “5100”
            errorDescription: “This is an error description”
            extensionList:
              extension:
                - “key”: “errorDescription”
                  “value”: “This is a more detailed error description”
                - “key”: “errorDescription”
                  “value”: “This is a more detailed error description”
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorInformationObject'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/ErrorResponse400'
        '401':
          $ref: '#/components/responses/ErrorResponse401'
        '403':
          $ref: '#/components/responses/ErrorResponse403'
        '404':
          $ref: '#/components/responses/ErrorResponse404'
        '405':
          $ref: '#/components/responses/ErrorResponse405'
        '406':
          $ref: '#/components/responses/ErrorResponse406'
        '501':
          $ref: '#/components/responses/ErrorResponse501'
        '503':
          $ref: '#/components/responses/ErrorResponse503'
  /quotes/{id}:
    parameters:
      - $ref: '#/components/parameters/ID'
      - $ref: '#/components/parameters/Content-Type'
      - $ref: '#/components/parameters/Date'
      - $ref: '#/components/parameters/X-Forwarded-For'
      - $ref: '#/components/parameters/FSPIOP-Source'
      - $ref: '#/components/parameters/FSPIOP-Destination'
      - $ref: '#/components/parameters/FSPIOP-Encryption'
      - $ref: '#/components/parameters/FSPIOP-Signature'
      - $ref: '#/components/parameters/FSPIOP-URI'
      - $ref: '#/components/parameters/FSPIOP-HTTP-Method'
    get:
      tags:
        - quotes
        - sampled
      summary: QuotesById
      description: The HTTP request GET /quotes/<id> is used to get information regarding
        an earlier created or requested quote. The <id> in the URI should contain
        the quoteId that was used for the creation of the quote.
      operationId: QuotesByIdGet
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        '202':
          $ref: '#/components/responses/Response202'
        '400':
          $ref: '#/components/responses/ErrorResponse400'
        '401':
          $ref: '#/components/responses/ErrorResponse401'
        '403':
          $ref: '#/components/responses/ErrorResponse403'
        '404':
          $ref: '#/components/responses/ErrorResponse404'
        '405':
          $ref: '#/components/responses/ErrorResponse405'
        '406':
          $ref: '#/components/responses/ErrorResponse406'
        '501':
          $ref: '#/components/responses/ErrorResponse501'
        '503':
          $ref: '#/components/responses/ErrorResponse503'
    put:
      tags:
        - quotes
        - sampled
      summary: QuotesById
      description: The callback PUT /quotes/<id> is used to inform the client of a
        requested or created quote. The <id> in the URI should contain the quoteId
        that was used for the creation of the quote, or the <id> that was used in
        the GET /quotes/<id>GET /quotes/<id>.
      operationId: QuotesByIdPut
      parameters:
        - $ref: '#/components/parameters/Content-Length'
      x-examples:
        application/json:
          transferAmount:
            currency: “USD”
            amount: “124.45”
          payeeReceiveAmount:
            currency: “USD”
            amount: “123.45”
          payeeFspFee:
            currency: “USD”
            amount: “1.45”
          payeeFspCommission:
            currency: “USD”
            amount: 0
          expiration: “2016-05-24T08:38:08.699-04:00”
          geoCode:
            latitude: “+45.4215”
            longitude: “+75.6972”
          ilpPacket: “AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA”
          condition: f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA
          extensionList:
            extension:
              - “key”: “errorDescription”
                “value”: “This is a more detailed error description”
              - “key”: “errorDescription”
                “value”: “This is a more detailed error description”
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotesIDPutResponse'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/ErrorResponse400'
        '401':
          $ref: '#/components/responses/ErrorResponse401'
        '403':
          $ref: '#/components/responses/ErrorResponse403'
        '404':
          $ref: '#/components/responses/ErrorResponse404'
        '405':
          $ref: '#/components/responses/ErrorResponse405'
        '406':
          $ref: '#/components/responses/ErrorResponse406'
        '501':
          $ref: '#/components/responses/ErrorResponse501'
        '503':
          $ref: '#/components/responses/ErrorResponse503'
  /quotes:
    post:
      tags:
        - quotes
        - sampled
      summary: Quotes
      description: The HTTP request POST /quotes is used to request the creation of
        a quote for the provided financial transaction in the server.
      operationId: QuotesPost
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Length'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Date'
        - $ref: '#/components/parameters/X-Forwarded-For'
        - $ref: '#/components/parameters/FSPIOP-Source'
        - $ref: '#/components/parameters/FSPIOP-Destination'
        - $ref: '#/components/parameters/FSPIOP-Encryption'
        - $ref: '#/components/parameters/FSPIOP-Signature'
        - $ref: '#/components/parameters/FSPIOP-URI'
        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'
      x-examples:
        application/json:
          quoteId: “b51ec534-ee48-4575-b6a9-ead2955b8069”
          transactionId: “a8323bc6-c228-4df2-ae82-e5a997baf899”
          transactionRequestId: “a8323bc6-c228-4df2-ae82-e5a997baf890”
          payee:
            partyIdInfo:
              partyIdType: “PERSONAL_ID”
              partyIdentifier: “16135551212”
              partySubIdOrType: “DRIVING_LICENSE”
              fspId: “1234”
              extensionList:
                extension:
                  - “key”: “errorDescription”
                    “value”: “This is a more detailed error description”
                  - “key”: “errorDescription”
                    “value”: “This is a more detailed error description”
            merchantClassificationCode: 4321
            name: “Justin Trudeau”
            personalInfo:
              complexName:
                firstName: “Justin”
                middleName: “Pierre”
                lastName: “Trudeau”
              dateOfBirth: “1971-12-25”
          payer:
            partyIdInfo:
              partyIdType: “PERSONAL_ID”
              partyIdentifier: “16135551212”
              partySubIdOrType: “PASSPORT”
              fspId: “1234”
              extensionList:
                extension:
                  - “key”: “errorDescription”
                    “value”: “This is a more detailed error description”
                  - “key”: “errorDescription”
                    “value”: “This is a more detailed error description”
            merchantClassificationCode: 1234
            name: “Donald Trump”
            personalInfo:
              complexName:
                firstName: “Donald”
                middleName: “John”
                lastName: “Trump”
              dateOfBirth: “1946-06-14”
          amountType: SEND
          amount:
            currency: “USD”
            amount: “123.45”
          fees:
            currency: “USD”
            amount: “1.25”
          transactionType:
            scenario: “DEPOSIT”
            subScenario: “locally defined sub-scenario”
            initiator: “PAYEE”
            initiatorType: “CONSUMER”
            refundInfo:
              originalTransactionId: “b51ec534-ee48-4575-b6a9-ead2955b8069”
              refundReason: “free text indicating reason for the refund”
            balanceOfPayments: “123”
          geoCode:
            latitude: “+45.4215”
            longitude: “+75.6972”
          note: “Free-text memo”
          expiration: “2016-05-24T08:38:08.699-04:00”
          extensionList:
            extension:
              - “key”: “errorDescription”
                “value”: “This is a more detailed error description”
              - “key”: “errorDescription”
                “value”: “This is a more detailed error description”
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotesPostRequest'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/Response202'
        '400':
          $ref: '#/components/responses/ErrorResponse400'
        '401':
          $ref: '#/components/responses/ErrorResponse401'
        '403':
          $ref: '#/components/responses/ErrorResponse403'
        '404':
          $ref: '#/components/responses/ErrorResponse404'
        '405':
          $ref: '#/components/responses/ErrorResponse405'
        '406':
          $ref: '#/components/responses/ErrorResponse406'
        '501':
          $ref: '#/components/responses/ErrorResponse501'
        '503':
          $ref: '#/components/responses/ErrorResponse503'
  /bulkQuotes/{id}/error:
    put:
      tags:
        - bulkQuotes
        - sampled
      summary: BulkQuotesErrorById
      description: If the server is unable to find or create a bulk quote, or another
        processing error occurs, the error callback PUT /bulkQuotes/<id>/error is
        used. The <id> in the URI should contain the bulkQuoteId that was used for
        the creation of the bulk quote, or the <id> that was used in the GET /bulkQuotes/<id>.
      operationId: BulkQuotesErrorByIdPut
      parameters:
        - $ref: '#/components/parameters/ID'
        - $ref: '#/components/parameters/Content-Length'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Date'
        - $ref: '#/components/parameters/X-Forwarded-For'
        - $ref: '#/components/parameters/FSPIOP-Source'
        - $ref: '#/components/parameters/FSPIOP-Destination'
        - $ref: '#/components/parameters/FSPIOP-Encryption'
        - $ref: '#/components/parameters/FSPIOP-Signature'
        - $ref: '#/components/parameters/FSPIOP-URI'
        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'
      x-examples:
        application/json:
          errorInformation:
            errorCode: “5100”
            errorDescription: “This is an error description”
            extensionList:
              extension:
                - “key”: “errorDescription”
                  “value”: “This is a more detailed error description”
                - “key”: “errorDescription”
                  “value”: “This is a more detailed error description”
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorInformationObject'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/ErrorResponse400'
        '401':
          $ref: '#/components/responses/ErrorResponse401'
        '403':
          $ref: '#/components/responses/ErrorResponse403'
        '404':
          $ref: '#/components/responses/ErrorResponse404'
        '405':
          $ref: '#/components/responses/ErrorResponse405'
        '406':
          $ref: '#/components/responses/ErrorResponse406'
        '501':
          $ref: '#/components/responses/ErrorResponse501'
        '503':
          $ref: '#/components/responses/ErrorResponse503'
  /bulkQuotes/{id}:
    parameters:
      - $ref: '#/components/parameters/ID'
      - $ref: '#/components/parameters/Content-Type'
      - $ref: '#/components/parameters/Date'
      - $ref: '#/components/parameters/X-Forwarded-For'
      - $ref: '#/components/parameters/FSPIOP-Source'
      - $ref: '#/components/parameters/FSPIOP-Destination'
      - $ref: '#/components/parameters/FSPIOP-Encryption'
      - $ref: '#/components/parameters/FSPIOP-Signature'
      - $ref: '#/components/parameters/FSPIOP-URI'
      - $ref: '#/components/parameters/FSPIOP-HTTP-Method'
    get:
      tags:
        - bulkQuotes
        - sampled
      summary: BulkQuotesById
      description: The HTTP request GET /bulkQuotes/<id> is used to get information
        regarding an earlier created or requested bulk quote. The <id> in the URI
        should contain the bulkQuoteId that was used for the creation of the bulk
        quote.
      operationId: BulkQuotesByIdGet
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        '202':
          $ref: '#/components/responses/Response202'
        '400':
          $ref: '#/components/responses/ErrorResponse400'
        '401':
          $ref: '#/components/responses/ErrorResponse401'
        '403':
          $ref: '#/components/responses/ErrorResponse403'
        '404':
          $ref: '#/components/responses/ErrorResponse404'
        '405':
          $ref: '#/components/responses/ErrorResponse405'
        '406':
          $ref: '#/components/responses/ErrorResponse406'
        '501':
          $ref: '#/components/responses/ErrorResponse501'
        '503':
          $ref: '#/components/responses/ErrorResponse503'
    put:
      tags:
        - bulkQuotes
        - sampled
      summary: BulkQuotesById
      description: The callback PUT /bulkQuotes/<id> is used to inform the client
        of a requested or created bulk quote. The <id> in the URI should contain the
        bulkQuoteId that was used for the creation of the bulk quote, or the <id>
        that was used in the GET /bulkQuotes/<id>.
      operationId: BulkQuotesByIdPut
      parameters:
        - $ref: '#/components/parameters/Content-Length'
      x-examples:
        application/json:
          individualQuoteResults:
            - quoteId: b51ec534-ee48-4575-b6a9-ead2955b8069,
            - receiveAmount:
               currency: USD
               amount: 123.45
            - payeeFspFee:
               currency: USD
               amount: 1.45
            - payeeFspCommission:
               currency: USD
               amount: 1.45
            - ilpPacket: AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA,
            - condition: f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA,
            - errorInformation:
                errorCode: 5100
                errorDescription: This is an error description
                extensionList:
                  extension:
                    - “key”: “errorDescription”
                      “value”: “This is a more detailed error description”
                    - “key”: “errorDescription”
                      “value”: “This is a more detailed error description”
            - extensionList:
                extension:
                  - “key”: “errorDescription”
                    “value”: “This is a more detailed error description”
                  - “key”: “errorDescription”
                    “value”: “This is a more detailed error description”
          expiration: “2016-05-24T08:38:08.699-04:00”
          extensionList:
            extension:
              - “key”: “errorDescription”
                “value”: “This is a more detailed error description”
              - “key”: “errorDescription”
                “value”: “This is a more detailed error description”
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkQuotesIDPutResponse'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/ErrorResponse400'
        '401':
          $ref: '#/components/responses/ErrorResponse401'
        '403':
          $ref: '#/components/responses/ErrorResponse403'
        '404':
          $ref: '#/components/responses/ErrorResponse404'
        '405':
          $ref: '#/components/responses/ErrorResponse405'
        '406':
          $ref: '#/components/responses/ErrorResponse406'
        '501':
          $ref: '#/components/responses/ErrorResponse501'
        '503':
          $ref: '#/components/responses/ErrorResponse503'
  /bulkQuotes:
    post:
      tags:
        - bulkQuotes
        - sampled
      summary: BulkQuotes
      description: The HTTP request POST /bulkQuotes is used to request the creation
        of a bulk quote for the provided financial transactions in the server.
      operationId: BulkQuotesPost
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Length'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Date'
        - $ref: '#/components/parameters/X-Forwarded-For'
        - $ref: '#/components/parameters/FSPIOP-Source'
        - $ref: '#/components/parameters/FSPIOP-Destination'
        - $ref: '#/components/parameters/FSPIOP-Encryption'
        - $ref: '#/components/parameters/FSPIOP-Signature'
        - $ref: '#/components/parameters/FSPIOP-URI'
        - $ref: '#/components/parameters/FSPIOP-HTTP-Method'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkQuotesPostRequest'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/Response202'
        '400':
          $ref: '#/components/responses/ErrorResponse400'
        '401':
          $ref: '#/components/responses/ErrorResponse401'
        '403':
          $ref: '#/components/responses/ErrorResponse403'
        '404':
          $ref: '#/components/responses/ErrorResponse404'
        '405':
          $ref: '#/components/responses/ErrorResponse405'
        '406':
          $ref: '#/components/responses/ErrorResponse406'
        '501':
          $ref: '#/components/responses/ErrorResponse501'
        '503':
          $ref: '#/components/responses/ErrorResponse503'
  /health:
    get:
      tags:
        - health
      summary: Get Server
      description: The HTTP request GET /health is used to return the current status
        of the API.
      operationId: HealthGet
      responses:
        '200':
          $ref: '#/components/responses/ResponseHealth200'
        '400':
          $ref: '#/components/responses/ErrorResponse400'
        '401':
          $ref: '#/components/responses/ErrorResponse401'
        '403':
          $ref: '#/components/responses/ErrorResponse403'
        '404':
          $ref: '#/components/responses/ErrorResponse404'
        '405':
          $ref: '#/components/responses/ErrorResponse405'
        '406':
          $ref: '#/components/responses/ErrorResponse406'
        '501':
          $ref: '#/components/responses/ErrorResponse501'
        '503':
          $ref: '#/components/responses/ErrorResponse503'
components:
  schemas:
    Amount:
      title: Amount
      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
      type: string
      description: The API data type Amount is a JSON String in a canonical format
        that is restricted by a regular expression for interoperability reasons. This
        pattern does not allow any trailing zeroes at all, but allows an amount without
        a minor currency unit. It also only allows four digits in the minor currency
        unit; a negative value is not allowed. Using more than 18 digits in the major
        currency unit is not allowed.
    AmountType:
      title: AmountType
      type: string
      description: Below are the allowed values for the enumeration AmountType - SEND
        Amount the Payer would like to send, that is, the amount that should be withdrawn
        from the Payer account including any fees. - RECEIVE Amount the Payer would
        like the Payee to receive, that is, the amount that should be sent to the
        receiver exclusive fees.
      enum:
        - SEND
        - RECEIVE
    BalanceOfPayments:
      title: BalanceOfPayments
      pattern: ^[1-9]\d{2}$
      type: string
      description: (BopCode) The API data type BopCode is a JSON String of 3 characters,
        consisting of digits only. Negative numbers are not allowed. A leading zero
        is not allowed. https://www.imf.org/external/np/sta/bopcode/
    CorrelationId:
      title: CorrelationId
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
      description: Identifier that correlates all messages of the same sequence. The
        API data type UUID (Universally Unique Identifier) is a JSON String in canonical
        format, conforming to RFC 4122, that is restricted by a regular expression
        for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal
        symbols and 4 dashes (‘-‘).
    Currency:
      title: CurrencyEnum
      maxLength: 3
      minLength: 3
      type: string
      description: The currency codes defined in ISO 4217 as three-letter alphabetic
        codes are used as the standard naming representation for currencies.
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SPL
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TVD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XDR
        - XOF
        - XPF
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMW
        - ZWD
    Date:
      title: Date
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
      type: string
      description: The API data type Date is a JSON String in a lexical format that
        is restricted by a regular expression for interoperability reasons. This format,
        as specified in ISO 8601, contains a date only. A more readable version of
        the format is yyyy-MM-dd. Examples - "1982-05-23", "1987-08-05”
    DateOfBirth:
      title: DateofBirth (type Date)
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
      type: string
      description: Date of Birth of the Party.
    DateTime:
      title: DateTime
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      type: string
      description: The API data type DateTime is a JSON String in a lexical format
        that is restricted by a regular expression for interoperability reasons. The
        format is according to ISO 8601, expressed in a combined date, time and time
        zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM].
        Examples -  "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where
        Z indicates Zulu time zone, same as UTC).
    ErrorCode:
      title: ErrorCode
      pattern: ^(10|20|3[0-4]|4[0-4]|5[0-4])[0-9]{2}$
      type: string
      description: The API data type ErrorCode is a JSON String of four characters,
        consisting of digits only. Negative numbers are not allowed. A leading zero
        is not allowed. Each error code in the API is a four-digit number, for example,
        1234, where the first number (1 in the example) represents the high-level
        error category, the second number (2 in the example) represents the low-level
        error category, and the last two numbers (34 in the example) represents the
        specific error.
    ErrorDescription:
      title: ErrorDescription
      maxLength: 128
      minLength: 1
      type: string
      description: Error description string.
    ExtensionKey:
      title: ExtensionKey
      maxLength: 32
      minLength: 1
      type: string
      description: Extension key.
    ExtensionValue:
      title: ExtensionValue
      maxLength: 128
      minLength: 1
      type: string
      description: Extension value.
    FirstName:
      title: FirstName
      maxLength: 128
      minLength: 1
      pattern: '^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control} .,''-]{1,128}$'
      type: string
      description: First name of the Party (Name Type).
    FspId:
      title: FspId
      maxLength: 32
      minLength: 1
      type: string
      description: FSP identifier.
    IlpCondition:
      title: IlpCondition
      maxLength: 48
      pattern: ^[A-Za-z0-9-_]{43}$
      type: string
      description: Condition that must be attached to the transfer by the Payer.
    IlpFulfilment:
      title: IlpFulfilment
      maxLength: 48
      pattern: ^[A-Za-z0-9-_]{43}$
      type: string
      description: Fulfilment that must be attached to the transfer by the Payee.
    IlpPacket:
      title: IlpPacket
      maxLength: 32768
      minLength: 1
      pattern: ^[A-Za-z0-9-_]+[=]{0,2}$
      type: string
      description: Information for recipient (transport layer information).
    LastName:
      title: LastName
      maxLength: 128
      minLength: 1
      pattern: '^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control} .,''-]{1,128}$'
      type: string
      description: Last name of the Party (Name Type).
    Latitude:
      title: Latitude
      pattern: ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
      type: string
      description: The API data type Latitude is a JSON String in a lexical format
        that is restricted by a regular expression for interoperability reasons.
    Longitude:
      title: Longitude
      pattern: ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
      type: string
      description: The API data type Longitude is a JSON String in a lexical format
        that is restricted by a regular expression for interoperability reasons.
    MerchantClassificationCode:
      title: MerchantClassificationCode
      pattern: ^[\d]{1,4}$
      type: string
      description: A limited set of pre-defined numbers. This list would be a limited
        set of numbers identifying a set of popular merchant types like School Fees,
        Pubs and Restaurants, Groceries, etc.
    MiddleName:
      title: MiddleName
      maxLength: 128
      minLength: 1
      pattern: '^(?!\s*$)[\p{L}\p{gc=Mark}\p{digit}\p{gc=Connector_Punctuation}\p{Join_Control} .,''-]{1,128}$'
      type: string
      description: Middle name of the Party (Name Type).
    Note:
      title: Note
      maxLength: 128
      minLength: 1
      type: string
      description: Memo assigned to transaction
    PartyIdentifier:
      title: PartyIdentifier
      maxLength: 128
      minLength: 1
      type: string
      description: Identifier of the Party.
    PartyIdType:
      title: PartyIdTypeEnum
      type: string
      description: Below are the allowed values for the enumeration - MSISDN An MSISDN
        (Mobile Station International Subscriber Directory Number, that is, the phone
        number) is used as reference to a participant. The MSISDN identifier should
        be in international format according to the ITU-T E.164 standard. Optionally,
        the MSISDN may be prefixed by a single plus sign, indicating the international
        prefix. - EMAIL An email is used as reference to a participant. The format
        of the email should be according to the informational RFC 3696. - PERSONAL_ID
        A personal identifier is used as reference to a participant. Examples of personal
        identification are passport number, birth certificate number, and national
        registration number. The identifier number is added in the PartyIdentifier
        element. The personal identifier type is added in the PartySubIdOrType element.
        - BUSINESS A specific Business (for example, an organization or a company)
        is used as reference to a participant. The BUSINESS identifier can be in any
        format. To make a transaction connected to a specific username or bill number
        in a Business, the PartySubIdOrType element should be used. - DEVICE A specific
        device (for example, a POS or ATM) id connected to a specific business or
        organization is used as reference to a Party. For referencing a specific device
        under a specific business or organization, use the PartySubIdOrType element.
        - ACCOUNT_ID A bank account number or FSP account id should be used as reference
        to a participant. The ACCOUNT_ID identifier can be in any format, as formats
        can greatly differ depending on country and FSP. - IBAN A bank account number
        or FSP account id is used as reference to a participant. The IBAN identifier
        can consist of up to 34 alphanumeric characters and should be entered without
        whitespace. - ALIAS An alias is used as reference to a participant. The alias
        should be created in the FSP as an alternative reference to an account owner.
        Another example of an alias is a username in the FSP system. The ALIAS identifier
        can be in any format. It is also possible to use the PartySubIdOrType element
        for identifying an account under an Alias defined by the PartyIdentifier.
      enum:
        - MSISDN
        - EMAIL
        - PERSONAL_ID
        - BUSINESS
        - DEVICE
        - ACCOUNT_ID
        - IBAN
        - ALIAS
    PartyName:
      title: PartyName
      maxLength: 128
      minLength: 1
      type: string
      description: Name of the Party. Could be a real name or a nickname.
    PartySubIdOrType:
      title: PartySubIdOrType
      maxLength: 128
      minLength: 1
      type: string
      description: Either a sub-identifier of a PartyIdentifier, or a sub-type of
        the PartyIdType, normally a PersonalIdentifierType.
    PersonalIdentifierType:
      title: PersonalIdentifierType
      type: string
      description: Below are the allowed values for the enumeration - PASSPORT A passport
        number is used as reference to a Party. - NATIONAL_REGISTRATION A national
        registration number is used as reference to a Party. - DRIVING_LICENSE A driving
        license is used as reference to a Party. - ALIEN_REGISTRATION An alien registration
        number is used as reference to a Party. - NATIONAL_ID_CARD A national id card
        number is used as reference to a Party. - EMPLOYER_ID A tax identification
        number is used as reference to a Party. - TAX_ID_NUMBER A tax identification
        number is used as reference to a Party. - SENIOR_CITIZENS_CARD A senior citizens
        card number is used as reference to a Party. - MARRIAGE_CERTIFICATE A marriage
        certificate number is used as reference to a Party. - HEALTH_CARD A health
        card number is used as reference to a Party. - VOTERS_ID A voter’s identification
        number is used as reference to a Party. - UNITED_NATIONS An UN (United Nations)
        number is used as reference to a Party. - OTHER_ID Any other type of identification
        type number is used as reference to a Party.
      enum:
        - PASSPORT
        - NATIONAL_REGISTRATION
        - DRIVING_LICENSE
        - ALIEN_REGISTRATION
        - NATIONAL_ID_CARD
        - EMPLOYER_ID
        - TAX_ID_NUMBER
        - SENIOR_CITIZENS_CARD
        - MARRIAGE_CERTIFICATE
        - HEALTH_CARD
        - VOTERS_ID
        - UNITED_NATIONS
        - OTHER_ID
    QuoteId:
      title: QuoteId
      minLength: 1
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
      description: Quote Identifier. The API data type UUID (Universally Unique Identifier)
        is a JSON String in canonical format, conforming to RFC 4122, that is restricted
        by a regular expression for interoperability reasons. An UUID is always 36
        characters long, 32 hexadecimal symbols and 4 dashes (‘-‘). A minLength of
        1 has been specified due to the regex not being validated on empty strings,
        this should be removed once the enjoi module has been fixed.
    RefundReason:
      title: RefundReason
      maxLength: 128
      minLength: 1
      type: string
      description: Reason for the refund.
    TransactionId:
      title: TransactionId
      minLength: 1
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
      description: Transaction Identifier. The API data type UUID (Universally Unique
        Identifier) is a JSON String in canonical format, conforming to RFC 4122,
        that is restricted by a regular expression for interoperability reasons. An
        UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).
        A minLength of 1 has been specified due to the regex not being validated on
        empty strings, this should be removed once the enjoi module has been fixed.
    TransactionInitiator:
      title: TransactionInitiatorEnum
      type: string
      description: Below are the allowed values for the enumeration - PAYER Sender
        of funds is initiating the transaction. The account to send from is either
        owned by the Payer or is connected to the Payer in some way. - PAYEE Recipient
        of the funds is initiating the transaction by sending a transaction request.
        The Payer must approve the transaction, either automatically by a pre-generated
        OTP or by pre-approval of the Payee, or by manually approving in his or her
        own Device.
      enum:
        - PAYER
        - PAYEE
    TransactionInitiatorType:
      title: TransactionInitiatorTypeEnum
      type: string
      description: Below are the allowed values for the enumeration - CONSUMER Consumer
        is the initiator of the transaction. - AGENT Agent is the initiator of the
        transaction. - BUSINESS Business is the initiator of the transaction. - DEVICE
        Device is the initiator of the transaction.
      enum:
        - CONSUMER
        - AGENT
        - BUSINESS
        - DEVICE
    TransactionScenario:
      title: TransactionScenarioEnum
      type: string
      description: Below are the allowed values for the enumeration - DEPOSIT Used
        for performing a Cash-In (deposit) transaction. In a normal scenario, electronic
        funds are transferred from a Business account to a Consumer account, and physical
        cash is given from the Consumer to the Business User. - WITHDRAWAL Used for
        performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic
        funds are transferred from a Consumer’s account to a Business account, and
        physical cash is given from the Business User to the Consumer. - TRANSFER
        Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction.
        - PAYMENT Usually used for performing a transaction from a Consumer to a Merchant
        or Organization, but could also be for a B2B (Business to Business) payment.
        The transaction could be online for a purchase in an Internet store, in a
        physical store where both the Consumer and Business User are present, a bill
        payment, a donation, and so on. - REFUND Used for performing a refund of transaction.
      enum:
        - DEPOSIT
        - WITHDRAWAL
        - TRANSFER
        - PAYMENT
        - REFUND
    TransactionSubScenario:
      title: TransactionSubScenario
      pattern: ^[A-Z_]{1,32}$
      type: string
      description: Possible sub-scenario, defined locally within the scheme (UndefinedEnum
        Type).
    UndefinedEnum:
      title: UndefinedEnum
      pattern: ^[A-Z_]{1,32}$
      type: string
      description: The API data type UndefinedEnum is a JSON String consisting of
        1 to 32 uppercase characters including an underscore character (_).
    BulkQuotesPostRequest:
      title: BulkQuotesPostRequest
      required:
        - bulkQuoteId
        - individualQuotes
        - payer
      type: object
      additionalProperties: false
      properties:
        bulkQuoteId:
          $ref: '#/components/schemas/QuoteId'
        payer:
          $ref: '#/components/schemas/Party'
        geoCode:
          $ref: '#/components/schemas/GeoCode'
        expiration:
          $ref: '#/components/schemas/DateTime'
        individualQuotes:
          maxItems: 1000
          minItems: 1
          type: array
          description: List of quotes elements.
          items:
            $ref: '#/components/schemas/IndividualQuote'
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
      description: POST /bulkQuotes object
    BulkQuotesIDPutResponse:
      title: BulkQuotesIDPutResponse
      required:
        - expiration
      type: object
      additionalProperties: false
      properties:
        individualQuoteResults:
          maxItems: 1000
          type: array
          description: Fees for each individual transaction, if any of them are charged
            per transaction.
          items:
            $ref: '#/components/schemas/IndividualQuoteResult'
        expiration:
          $ref: '#/components/schemas/DateTime'
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
      description: PUT /bulkQuotes/{id} object
    ErrorInformation:
      title: ErrorInformation
      required:
        - errorCode
        - errorDescription
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        errorDescription:
          $ref: '#/components/schemas/ErrorDescription'
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
      description: Data model for the complex type ErrorInformation.
    ErrorInformationObject:
      title: ErrorInformationObject
      required:
        - errorInformation
      type: object
      additionalProperties: false
      properties:
        errorInformation:
          $ref: '#/components/schemas/ErrorInformation'
      description: Data model for the complex type object that contains ErrorInformation.
    ErrorInformationResponse:
      title: ErrorInformationResponse
      type: object
      properties:
        errorInformation:
          $ref: '#/components/schemas/ErrorInformation'
      description: Data model for the complex type object that contains an optional
        element ErrorInformation used along with 4xx and 5xx responses.
    Extension:
      title: Extension
      required:
        - key
        - value
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ExtensionKey'
        value:
          $ref: '#/components/schemas/ExtensionValue'
      description: Data model for the complex type Extension
    ExtensionList:
      title: ExtensionList
      required:
        - extension
      type: object
      properties:
        extension:
          maxItems: 16
          minItems: 1
          type: array
          description: Number of Extension elements
          items:
            $ref: '#/components/schemas/Extension'
      description: Data model for the complex type ExtensionList
    GeoCode:
      title: GeoCode
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          $ref: '#/components/schemas/Latitude'
        longitude:
          $ref: '#/components/schemas/Longitude'
      description: Data model for the complex type GeoCode. Indicates the geographic
        location from where the transaction was initiated.
    IndividualQuote:
      title: IndividualQuote
      required:
        - amount
        - amountType
        - payee
        - quoteId
        - transactionId
        - transactionType
      type: object
      properties:
        quoteId:
          $ref: '#/components/schemas/QuoteId'
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        payee:
          $ref: '#/components/schemas/Party'
        amountType:
          $ref: '#/components/schemas/AmountType'
        amount:
          $ref: '#/components/schemas/Money'
        fees:
          $ref: '#/components/schemas/Money'
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        note:
          $ref: '#/components/schemas/Note'
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
      description: Data model for the complex type IndividualQuote.
    IndividualQuoteResult:
      title: IndividualQuoteResult
      required:
        - quoteId
      type: object
      properties:
        quoteId:
          $ref: '#/components/schemas/QuoteId'
        payee:
          $ref: '#/components/schemas/Party'
        transferAmount:
          $ref: '#/components/schemas/Money'
        payeeReceiveAmount:
          $ref: '#/components/schemas/Money'
        payeeFspFee:
          $ref: '#/components/schemas/Money'
        payeeFspCommission:
          $ref: '#/components/schemas/Money'
        ilpPacket:
          $ref: '#/components/schemas/IlpPacket'
        condition:
          $ref: '#/components/schemas/IlpCondition'
        errorInformation:
          $ref: '#/components/schemas/ErrorInformation'
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
      description: Data model for the complex type IndividualQuoteResult.
    Money:
      title: Money
      required:
        - amount
        - currency
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        amount:
          $ref: '#/components/schemas/Amount'
      description: Data model for the complex type Money.
    Party:
      title: Party
      required:
        - partyIdInfo
      type: object
      properties:
        partyIdInfo:
          $ref: '#/components/schemas/PartyIdInfo'
        merchantClassificationCode:
          $ref: '#/components/schemas/MerchantClassificationCode'
        name:
          $ref: '#/components/schemas/PartyName'
        personalInfo:
          $ref: '#/components/schemas/PartyPersonalInfo'
      description: Data model for the complex type Party.
    PartyComplexName:
      title: PartyComplexName
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        middleName:
          $ref: '#/components/schemas/MiddleName'
        lastName:
          $ref: '#/components/schemas/LastName'
      description: Data model for the complex type PartyComplexName.
    PartyIdInfo:
      title: PartyIdInfo
      required:
        - partyIdType
        - partyIdentifier
      type: object
      properties:
        partyIdType:
          $ref: '#/components/schemas/PartyIdType'
        partyIdentifier:
          $ref: '#/components/schemas/PartyIdentifier'
        partySubIdOrType:
          $ref: '#/components/schemas/PartySubIdOrType'
        fspId:
          $ref: '#/components/schemas/FspId'
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
      description: Data model for the complex type PartyIdInfo.
    PartyPersonalInfo:
      title: PartyPersonalInfo
      type: object
      properties:
        complexName:
          $ref: '#/components/schemas/PartyComplexName'
        dateOfBirth:
          $ref: '#/components/schemas/DateOfBirth'
      description: Data model for the complex type PartyPersonalInfo.
    QuotesPostRequest:
      title: QuotesPostRequest
      required:
        - amount
        - amountType
        - payee
        - payer
        - quoteId
        - transactionId
        - transactionType
      type: object
      additionalProperties: false
      properties:
        quoteId:
          $ref: '#/components/schemas/QuoteId'
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        transactionRequestId:
          $ref: '#/components/schemas/TransactionId'
        payee:
          $ref: '#/components/schemas/Party'
        payer:
          $ref: '#/components/schemas/Party'
        amountType:
          $ref: '#/components/schemas/AmountType'
        amount:
          $ref: '#/components/schemas/Money'
        fees:
          $ref: '#/components/schemas/Money'
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        geoCode:
          $ref: '#/components/schemas/GeoCode'
        note:
          $ref: '#/components/schemas/Note'
        expiration:
          $ref: '#/components/schemas/DateTime'
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
      description: POST /quotes object
    QuotesIDPutResponse:
      title: QuotesIDPutResponse
      required:
        - condition
        - expiration
        - ilpPacket
        - transferAmount
      type: object
      additionalProperties: false
      properties:
        transferAmount:
          $ref: '#/components/schemas/Money'
        payeeReceiveAmount:
          $ref: '#/components/schemas/Money'
        payeeFspFee:
          $ref: '#/components/schemas/Money'
        payeeFspCommission:
          $ref: '#/components/schemas/Money'
        expiration:
          $ref: '#/components/schemas/DateTime'
        geoCode:
          $ref: '#/components/schemas/GeoCode'
        ilpPacket:
          $ref: '#/components/schemas/IlpPacket'
        condition:
          $ref: '#/components/schemas/IlpCondition'
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
      description: PUT /quotes/{id} object
    Refund:
      title: Refund
      required:
        - originalTransactionId
      type: object
      properties:
        originalTransactionId:
          $ref: '#/components/schemas/TransactionId'
        refundReason:
          $ref: '#/components/schemas/RefundReason'
      description: Data model for the complex type Refund.
    Status:
      title: Status
      type: object
      properties:
        status:
          type: string
          description: The return status, usually "OK"
      description: Data model for the api status.
    TransactionType:
      title: TransactionType
      required:
        - initiator
        - initiatorType
        - scenario
      type: object
      properties:
        scenario:
          $ref: '#/components/schemas/TransactionScenario'
        subScenario:
          $ref: '#/components/schemas/TransactionSubScenario'
        initiator:
          $ref: '#/components/schemas/TransactionInitiator'
        initiatorType:
          $ref: '#/components/schemas/TransactionInitiatorType'
        refundInfo:
          $ref: '#/components/schemas/Refund'
        balanceOfPayments:
          $ref: '#/components/schemas/BalanceOfPayments'
      description: Data model for the complex type TransactionType.
  responses:
    ErrorResponse400:
      description: Bad Request - The application cannot process the request; for example,
        due to malformed syntax or the payload exceeded size restrictions.
      headers:
        Content-Length:
          description: The Content-Length header field indicates the anticipated size
            of the payload body. Only sent if there is a body.
          schema:
            type: integer
        Content-Type:
          description: The Content-Type header indicates the specific version of the
            API used to send the payload body.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
    ErrorResponse401:
      description: Unauthorized - The request requires authentication in order to
        be processed.
      headers:
        Content-Length:
          description: The Content-Length header field indicates the anticipated size
            of the payload body. Only sent if there is a body.
          schema:
            type: integer
        Content-Type:
          description: The Content-Type header indicates the specific version of the
            API used to send the payload body.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
    ErrorResponse403:
      description: Forbidden - The request was denied and will be denied in the future.
      headers:
        Content-Length:
          description: The Content-Length header field indicates the anticipated size
            of the payload body. Only sent if there is a body.
          schema:
            type: integer
        Content-Type:
          description: The Content-Type header indicates the specific version of the
            API used to send the payload body.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
    ErrorResponse404:
      description: Not Found - The resource specified in the URI was not found.
      headers:
        Content-Length:
          description: The Content-Length header field indicates the anticipated size
            of the payload body. Only sent if there is a body.
          schema:
            type: integer
        Content-Type:
          description: The Content-Type header indicates the specific version of the
            API used to send the payload body.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
    ErrorResponse405:
      description: Method Not Allowed - An unsupported HTTP method for the request
        was used.
      headers:
        Content-Length:
          description: The Content-Length header field indicates the anticipated size
            of the payload body. Only sent if there is a body.
          schema:
            type: integer
        Content-Type:
          description: The Content-Type header indicates the specific version of the
            API used to send the payload body.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
    ErrorResponse406:
      description: Not acceptable - The server is not capable of generating content
        according to the Accept headers sent in the request. Used in the API to indicate
        that the server does not support the version that the client is requesting.
      headers:
        Content-Length:
          description: The Content-Length header field indicates the anticipated size
            of the payload body. Only sent if there is a body.
          schema:
            type: integer
        Content-Type:
          description: The Content-Type header indicates the specific version of the
            API used to send the payload body.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
    ErrorResponse501:
      description: Not Implemented - The server does not support the requested service.
        The client should not retry.
      headers:
        Content-Length:
          description: The Content-Length header field indicates the anticipated size
            of the payload body. Only sent if there is a body.
          schema:
            type: integer
        Content-Type:
          description: The Content-Type header indicates the specific version of the
            API used to send the payload body.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
    ErrorResponse503:
      description: Service Unavailable - The server is currently unavailable to accept
        any new service requests. This should be a temporary state, and the client
        should retry within a reasonable time frame.
      headers:
        Content-Length:
          description: The Content-Length header field indicates the anticipated size
            of the payload body. Only sent if there is a body.
          schema:
            type: integer
        Content-Type:
          description: The Content-Type header indicates the specific version of the
            API used to send the payload body.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
    Response200:
      description: OK
      content: {}
    Response202:
      description: Accepted
      content: {}
    ResponseHealth200:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Status'
  parameters:
    Accept:
      name: accept
      in: header
      description: The Accept header field indicates the version of the API the client
        would like the server to use.
      required: true
      schema:
        type: string
    Content-Length:
      name: content-length
      in: header
      description: The Content-Length header field indicates the anticipated size
        of the payload body. Only sent if there is a body. Note - The API supports
        a maximum size of 5242880 bytes (5 Megabytes)
      schema:
        type: integer
    Content-Type:
      name: content-type
      in: header
      description: The Content-Type header indicates the specific version of the API
        used to send the payload body.
      required: true
      schema:
        type: string
    Date:
      name: date
      in: header
      description: The Date header field indicates the date when the request was sent.
      required: true
      schema:
        type: string
    X-Forwarded-For:
      name: x-forwarded-for
      in: header
      description: The X-Forwarded-For header field is an unofficially accepted standard
        used for informational purposes of the originating client IP address, as a
        request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For
        values as in the example shown here should be expected and supported by implementers
        of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239.
        However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.
      schema:
        type: string
    FSPIOP-Source:
      name: fspiop-source
      in: header
      description: The FSPIOP-Source header field is a non-HTTP standard field used
        by the API for identifying the sender of the HTTP request. The field should
        be set by the original sender of the request. Required for routing and signature
        verification (see header field FSPIOP-Signature).
      required: true
      schema:
        type: string
    FSPIOP-Destination:
      name: fspiop-destination
      in: header
      description: The FSPIOP-Destination header field is a non-HTTP standard field
        used by the API for HTTP header based routing of requests and responses to
        the destination. The field should be set by the original sender of the request
        (if known), so that any entities between the client and the server do not
        need to parse the payload for routing purposes.
      required: true
      schema:
        type: string
    FSPIOP-Encryption:
      name: fspiop-encryption
      in: header
      description: The FSPIOP-Encryption header field is a non-HTTP standard field
        used by the API for applying end-to-end encryption of the request.
      schema:
        type: string
    FSPIOP-Signature:
      name: fspiop-signature
      in: header
      description: The FSPIOP-Signature header field is a non-HTTP standard field
        used by the API for applying an end-to-end request signature.
      schema:
        type: string
    FSPIOP-URI:
      name: fspiop-uri
      in: header
      description: The FSPIOP-URI header field is a non-HTTP standard field used by
        the API for signature verification, should contain the service URI. Required
        if signature verification is used, for more information see API Signature
        document.
      schema:
        type: string
    FSPIOP-HTTP-Method:
      name: fspiop-http-method
      in: header
      description: The FSPIOP-HTTP-Method header field is a non-HTTP standard field
        used by the API for signature verification, should contain the service HTTP
        method. Required if signature verification is used, for more information see
        API Signature document.
      schema:
        type: string
    ID:
      name: id
      in: path
      required: true
      description: Common ID between the FSPs for the request objects, decided by
        the Payer FSP. The ID should be reused for resends of the same request for
        a transaction. A new ID should be generated for each new request for a transaction.
      schema:
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        type: string
    Type:
      name: Type
      in: path
      required: true
      schema:
        type: string
    SubId:
      name: SubId
      in: path
      required: true
      schema:
        type: string
