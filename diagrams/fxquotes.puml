@startuml fxquotes

!$simplified = false
!$shortCutSingleFXP = false
!$hideSwitchDetail = false
!$advancedCoreConnectorFlow = true
!$senderName = "Tunde"
!$senderFirstName = "Tunde"
!$senderMiddleName = ""
!$senderLastName = ""
!$senderDOB = "1966-06-16"
!$receiverName = "Yaro"
!$receiverFirstName = "Yaro"
!$receiverMiddleName = ""
!$receiverLastName = ""
!$receiverDOB = "1966-06-16"
!$payerCurrency = "BWP"
!$payeeCurrency = "TZS"
!$payerFSPID = "PayerFSP"
!$payeeFSPID = "PayeeFSP"
!$fxpID = "FDH_FX"
!$payerMSISDN = "26787654321"
!$payeeMSISDN = "2551234567890"
!$payeeReceiveAmount = "44000"
!$payerSendAmount = "300"
!$payeeFee = "4000"
!$targetAmount = "48000"
!$fxpChargesSource = "33"
!$fxpChargesTarget = "6000"
!$fxpSourceAmount = "300"
!$fxpTargetAmount = "48000"
!$totalChargesSourceCurrency = "55"
!$totalChargesTargetCurrency = "10000"
!$conversionRequestId = "828cc75f-1654-415e-8fcd-df76cc9329b9"
!$conversionId = "581f68ef-b54f-416f-9161-ac34e889a84b"
!$homeTransactionId = "string"
!$quoteId = "382987a8-75ce-4037-b500-c475e08c1727"
!$transactionId = "d9ce59d4-3598-4396-8630-581bb0551451"
!$quotePayerExpiration = "2021-08-25T14:17:09.663+01:00"
!$quotePayeeExpiration = "2021-08-25T14:17:09.663+01:00"
!$commitRequestId = "77c9d78d-c26a-4474-8b3c-99b96a814bfc"
!$determiningTransferId = "d9ce59d4-3598-4396-8630-581bb0551451"
!$transferId = "d9ce59d4-3598-4396-8630-581bb0551451"
!$fxCondition = "GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM"
!$condition = "HOr22-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks"

title FX Quotes using Mojaloop FX APIs\nPayer DFSP requests conversion with SEND amount
actor "$senderName" as A1
box "Payer DFSP" #LightBlue  
  participant "Payer CBS" as PayerCBS
  participant "Core Connector" as PayerCC
  participant "Payer\nMojaloop\nConnector" as D1
end box

box "Mojaloop Switch" #White
    participant "Quoting Service" as QS
    participant "ALS" as ALS
    participant "ALS Oracle" as ALSOracle
    participant "Services" as Services
end box

box "FX provider"  
  participant "FXP\nConnector" as FXP
  participant "Backend FX API" as FXPBackend
end box

box "Payee DFSP" #LightBlue   
  participant "Payee\nMojaloop\nConnector" as D2
  participant "Core Connector" as PayeeCC
end box

actor "$receiverName" as A2
autonumber

A1->PayerCBS:I'd like to pay $receiverName\n$payerSendAmount $payerCurrency, please
PayerCBS->PayerCC: Initiate remittance transfer

!if ($shortCutSingleFXP != true)
== Currency conversion ==

!if ($advancedCoreConnectorFlow != true)
PayerCC->>D1:Get quotation\n**PUT /transfers/$transferId**
note right of PayerCC
{
    "acceptParty": true
}
end note
!else
PayerCC->PayerCC:Hmmm. I can only send in $payerCurrency.\nI need to get some currency conversion
!endif

PayerCC->PayerCC:I'll ask FDH FX to perform my conversion
PayerCC->D1: I want to get a quote from this FXP\n**POST /fxQuotes**
    !if ($simplified != true)
        note right of PayerCC
        {
            "homeTransactionId": "$homeTransactionId",
            "conversionRequestId": "$conversionRequestId",
            "conversionTerms": {
                "conversionId": "$conversionId",
                "initiatingFsp": "$payerFSPID",
                "counterPartyFsp": "$fxpID",
                "amountType": "SEND",
                "sourceAmount": {
                    "currency": "$payerCurrency",
                    "amount": "$payerSendAmount"
                },
                "targetAmount": {
                    "currency": "$payeeCurrency"
                },
                "expiration": "2021-08-25T14:17:09.663+01:00"
            }
        }
        end note
    !endif
!endif

deactivate QS


!if ($shortCutSingleFXP != true)
D1->>QS:Here is the initial version of the transfer.\nPlease quote me for the currency conversion.
!else
D1->>FXP:Here is the initial version of the transfer.\nPlease quote me for the currency conversion.
!endif
note right of D1
    **post /fxQuotes**
    {
        "conversionRequestId": "$conversionRequestId",
        "conversionTerms": {
            "conversionId": "$conversionId",
            "initiatingFsp": "$payerFSPID",
            "counterPartyFsp": "$fxpID",
            "amountType": "SEND",
            "sourceAmount": {
                "currency": "$payerCurrency",
                "amount": "$payerSendAmount"
            },
            "targetAmount": {
                "currency": "$payeeCurrency"
            },
            "expiration": "2021-08-25T14:17:09.663+01:00"
        }
    }
end note
!if ($shortCutSingleFXP != true)
activate QS
!if ($simplified != true)
QS-->>D1:202 I'll get back to you
!endif
deactivate D1
QS->>FXP:Here is the initial version of the transfer.\nPlease quote me for the currency conversion.\n**POST /fxQuote**
activate FXP
!if ($simplified != true)
FXP-->>QS:202 I'll get back to you
!endif
deactivate QS
!else
!if ($simplified != true)
FXP-->>D1:202 I'll get back to you
!endif
!endif
FXP->FXPBackend:Lookup FX rate
!if ($simplified != true)
note right of FXP
    **post /fxQuotes**
    {
        "conversionRequestId": "$conversionRequestId",
        "conversionTerms": {
            "conversionId": "$conversionId",
            "initiatingFsp": "$payerFSPID",
            "counterPartyFsp": "$fxpID",
            "amountType": "SEND",
            "sourceAmount": {
                "currency": "$payerCurrency",
                "amount": "$payerSendAmount"
            },
            "targetAmount": {
                "currency": "$payeeCurrency"
            },
            "expiration": "2021-08-25T14:17:09.663+01:00"
        }
    }
end note
!endif
FXPBackend-->FXP:Return FX rate
note over FXPBackend
    I will add a $fxpChargesSource $payerCurrency fee for undertaking the conversion.
    Now I'll set an expiry time, sign the quotation object,
end note
!if ($simplified != true)
note right of FXP
    {
        "conversionTerms": {
            "conversionId": "$conversionId",
            "initiatingFsp": "$payerFSPID",
            "counterPartyFsp": "$fxpID",
            "amountType": "SEND",
            "sourceAmount": {
                "currency": "$payerCurrency",
                "amount": "$fxpSourceAmount"
            },
            "targetAmount": {
                "currency": "$payeeCurrency",
                "amount": "$fxpTargetAmount"
            },
            "expiration": "2021-08-25T14:17:09.663+01:00"
            "charges": [
                {
                    "chargeType": "string",
                    "sourceAmount": {
                        "currency": "$payerCurrency",
                        "amount": "$fxpChargesSource"
                    },
                    "targetAmount": {
                        "currency": "$payeeCurrency",
                        "amount": "$fxpChargesTarget"
                    }
                }
            ]
        }
    }
end note
!endif

note over FXP
    Now I'll sign the quotation object,
    create an ILP prepare packet and return it in the intermediary object.

    NOTE: the ILP prepare packet contains the following items, all encoded:
    - The amount being sent (i.e. in the source currency)
    - An expiry time
    - The condition
    - The name of the FXP
    - The content of the conversion terms
end note

note left of FXP
    **PUT /fxQuotes/$conversionRequestId**
    {
        "condition": "$fxCondition",
        "conversionTerms": {
            "conversionId": "$conversionId",
            "initiatingFsp": "$payerFSPID",
            "counterPartyFsp": "$fxpID",
            "amountType": "SEND",
            "sourceAmount": {
                "currency": "$payerCurrency",
                "amount": "$fxpSourceAmount"
            },
            "targetAmount": {
                "currency": "$payeeCurrency",
                "amount": "$fxpTargetAmount"
            },
            "expiration": "2021-08-25T14:17:09.663+01:00"
            "charges": [
                {
                    "chargeType": "string",
                    "sourceAmount": {
                        "currency": "$payerCurrency",
                        "amount": "$fxpChargesSource"
                    },
                    "targetAmount": {
                        "currency": "$payeeCurrency",
                        "amount": "$fxpChargesTarget"
                    }
                }
            ]
        }
    }
end note
!if ($shortCutSingleFXP != true)
FXP->>QS:Here's the signed conversion object
activate QS
!if ($simplified != true)
QS-->>FXP:200 Gotcha
!endif
deactivate FXP
QS->>D1:Here's the signed conversion object\n**PUT /fxQuotes/$conversionRequestId**
activate D1
!if ($simplified != true)
D1-->>QS:Gotcha
!endif
deactivate QS
!else
FXP-->>D1:Here's the signed conversion object\n**PUT /fxQuotes/$conversionRequestId**
!if ($simplified != true)
D1-->>FXP:202 I'll get back to you
!endif
activate D1
!endif


!if ($advancedCoreConnectorFlow != true)
    D1-->PayerCC: Here are the conversion terms
    note right of PayerCC
    {
        "transferId": "$transferId",
            "homeTransactionId": "$homeTransactionId",
            "from": {
                "dateOfBirth": "$senderDOB",
                "displayName": "$senderName",
                "firstName": "$senderFirstName",
                "middleName": "$senderMiddleName",
                "lastName": "$senderLastName"
                "fspId": "$payerFSPID",
                "idType": "MSISDN",
                "idValue": "$payerMSISDN"
            },
            "to": {
                "type": "CONSUMER",
                "idType": "MSISDN",
                "idValue": "$payeeMSISDN",
                "displayName": "$receiverName",
                "firstName": "$receiverFirstName",
                "middleName": "$receiverMiddleName",
                "lastName": "$receiverLastName"
                "dateOfBirth": "$receiverDOB",

                "fspId": "$payeeFSPID"
                "supportedCurrencies": [ "$payeeCurrency" ]
                "kycInformation": "<Encrypted KYC Data>"
            },
            "amountType": "SEND",
            "currency": "$payerCurrency",
            "amount": "$payerSendAmount"
            "currentState": "**WAITING_FOR_CONVERSION_ACCEPTANCE**",
            "getPartiesResponse": {
                <Same as the previous responses>
            },
            "conversionRequestId": "$conversionRequestId",
            "fxQuotesResponse": {
                "body": {
                    "condition": "$fxCondition",
                    "conversionTerms": {
                        "conversionId": "$conversionId",
                        "initiatingFsp": "$payerFSPID",
                        "counterPartyFsp": "$fxpID",
                        "amountType": "SEND",
                        "sourceAmount": {
                            "currency": "$payerCurrency",
                            "amount": "$fxpSourceAmount"
                        },
                        "targetAmount": {
                            "currency": "$payeeCurrency",
                            "amount": "$fxpTargetAmount"
                        },
                        "expiration": "2021-08-25T14:17:09.663+01:00"
                        "charges": [
                            {
                                "chargeType": "string",
                                "sourceAmount": {
                                    "currency": "$payerCurrency",
                                    "amount": "$fxpChargesSource"
                                },
                                "targetAmount": {
                                    "currency": "$payeeCurrency",
                                    "amount": "$fxpChargesTarget"
                                }
                            }
                        ]
                    }
                },
                "headers": {}
            },
            "fxQuotesResponseSource": "$payeeFSPID",
        }
    end note
!else
    D1->PayerCC: Here are the conversion terms
    !if ($simplified != true)
        note right of PayerCC
        {
            "homeTransactionId": "$homeTransactionId",
            "condition": "$fxCondition",
            "conversionTerms": {
                "conversionId": "$conversionId",
                "initiatingFsp": "$payerFSPID",
                "counterPartyFsp": "$fxpID",
                "amountType": "SEND",
                "sourceAmount": {
                    "currency": "$payerCurrency",
                    "amount": "$fxpSourceAmount"
                },
                "targetAmount": {
                    "currency": "$payeeCurrency",
                    "amount": "$fxpTargetAmount"
                },
                "expiration": "2021-08-25T14:17:09.663+01:00"
                "charges": [
                    {
                        "chargeType": "string",
                        "sourceAmount": {
                            "currency": "$payerCurrency",
                            "amount": "$fxpChargesSource"
                        },
                        "targetAmount": {
                            "currency": "$payeeCurrency",
                            "amount": "$fxpChargesTarget"
                        }
                    }
                ]
            }
        }
        end note
    !endif
!endif


== Agreement Phase ==


!if ($advancedCoreConnectorFlow != true)
PayerCC->D1: I want to get a quote from the FSP\nPUT /transfers
note right of PayerCC
{
    "acceptConversion": true
}
end note
!else
PayerCC->D1: I want to get a quote from the FSP\n**POST /quotes**
    !if ($simplified != true)
        note right of PayerCC
        {
            "fspId": "$payeeFSPID",
            "quotesPostRequest": {
                "quoteId": "$quoteId",
                "transactionId": "$transactionId",
                "payee": {
                    "partyIdInfo": {
                        "partyIdType": "MSISDN",
                        "partyIdentifier": "$payeeMSISDN",
                        "fspId": "$payeeFSPID"
                    },
                    "name": "$receiverName",
                    "personalInfo": {
                        "complexName": {
                        "firstName": "$receiverFirstName",
                        "middleName": "$receiverMiddleName",
                        "lastName": "$receiverLastName"
                        },
                        "dateOfBirth": "$receiverDOB",
                        "kycInformation": "<Encrypted KYC Data>"
                    },
                    "supportedCurrencies": [ "$payeeCurrency" ]
                },
                "payer": {
                    "partyIdInfo": {
                        "partyIdType": "MSISDN",
                        "partyIdentifier": "$payerMSISDN",
                        "fspId": "$payerFSPID"
                    },
                    "name": "$senderName",
                    "personalInfo": {
                        "complexName": {
                        "firstName": "$senderFirstName",
                        "middleName": "$senderMiddleName",
                        "lastName": "$senderLastName"
                        },
                        "dateOfBirth": "$senderDOB"
                    }
                },
                "amountType": "SEND",
                "amount": {
                    "currency": "$payeeCurrency",
                    "amount": "$fxpTargetAmount"
                },
                "converter": "PAYER",
                "expiration": "$quotePayerExpiration"
            }
        }
        end note
    !endif
!endif


D1->>QS:Please quote for a transfer which sends $fxpTargetAmount $payeeCurrency.\n**POST /quotes**
!if ($simplified != true)
note right of D1
POST /quotes

    {
        "quoteId": "$quoteId",
        "transactionId": "$transactionId",
        "payee": {
            "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "$payeeMSISDN",
                "fspId": "$payeeFSPID"
            },
            "name": "$receiverName",
            "personalInfo": {
                "complexName": {
                "firstName": "$receiverFirstName",
                "middleName": "$receiverMiddleName",
                "lastName": "$receiverLastName"
                },
                "dateOfBirth": "$receiverDOB",
                "kycInformation": "<Encrypted KYC Data>"
            },
            "supportedCurrencies": [ "$payeeCurrency" ]
        },
        "payer": {
            "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "$payerMSISDN",
                "fspId": "$payerFSPID"
            },
            "name": "$senderName",
            "personalInfo": {
                "complexName": {
                "firstName": "$senderFirstName",
                "middleName": "$senderMiddleName",
                "lastName": "$senderLastName"
                },
                "dateOfBirth": "$senderDOB"
            }
        },
        "amountType": "SEND",
        "amount": {
            "currency": "$payeeCurrency",
            "amount": "$fxpTargetAmount"
        },
        "converter": "PAYER",
        "expiration": "$quotePayerExpiration"
    }
end note
!endif
activate QS
!if ($simplified != true)
QS-->>D1:202 I'll get back to you
!endif

QS->>D2:**POST /quotes**
activate D2
!if ($simplified != true)
D2-->>QS:202 I'll get back to you
!endif
deactivate QS
D2->PayeeCC:**POST /quoterequests**
!if ($simplified != true)
note right of D2
{
    "quoteId": "$quoteId",
    "transactionId": "$transactionId",
    "payee": {
        "partyIdInfo": {
            "partyIdType": "MSISDN",
            "partyIdentifier": "$payeeMSISDN",
            "fspId": "$payeeFSPID"
        },
        "name": "$receiverName",
        "personalInfo": {
            "complexName": {
            "firstName": "$receiverFirstName",
            "middleName": "$receiverMiddleName",
            "lastName": "$receiverLastName"
            },
            "dateOfBirth": "$receiverDOB",
            "kycInformation": "<Encrypted KYC Data>"
        },
        "supportedCurrencies": [ "$payeeCurrency" ]
    },
    "payer": {
        "partyIdInfo": {
            "partyIdType": "MSISDN",
            "partyIdentifier": "$payerMSISDN",
            "fspId": "$payerFSPID"
        },
        "name": "$senderName",
        "personalInfo": {
            "complexName": {
            "firstName": "$senderFirstName",
            "middleName": "$senderMiddleName",
            "lastName": "$senderLastName"
            },
            "dateOfBirth": "$senderDOB"
        }
    },
    "amountType": "SEND",
    "amount": {
        "currency": "$payeeCurrency",
        "amount": "$fxpTargetAmount"
    },
    "converter": "PAYER",
    "expiration": "$quotePayerExpiration"
}
end note
!endif
PayeeCC->PayeeCC:OK, so I will charge $payeeFee $payeeCurrency for this.\nNow I create terms of the transfer
PayeeCC-->D2:Here are the terms
!if ($simplified != true)
note right of D2
{
    "quoteId": "$quoteId",
    "transactionId": "$transactionId",
    "payeeFspFeeAmount": "$payeeFee",
    "payeeFspFeeAmountCurrency": "$payeeCurrency",
    "payeeReceiveAmount": "$payeeReceiveAmount",
    "payeeReceiveAmountCurrency": "$payeeCurrency",
    "transferAmount": "$targetAmount",
    "transferAmountCurrency": "$payeeCurrency"
    "expiration": "$quotePayerExpiration"
}
end note
!endif
D2->D2:Now I will sign the transaction object
D2->>QS:Here's the signed quote
note left of D2
    **put /quotes/$quoteId**

    {
        "transferAmount": {
            "currency": "$payeeCurrency",
            "amount": "$targetAmount"
        },
        "payeeReceiveAmount": {
            "currency": "$payeeCurrency",
            "amount": "$payeeReceiveAmount"
        },
        "payeeFspFee": {
            "currency": "$payeeCurrency",
            "amount": "$payeeFee"
        },
        "expiration": "$quotePayeeExpiration",
        "ilpPacket": "
            <This is encoded transaction object. It contains data from quote request and response.>
        ",
        "condition": "$condition"
    }

end note
activate QS
!if ($simplified != true)
QS-->>D2:200 Gotcha
!endif
deactivate D2
QS->>D1:Here's the signed quote\n**PUT /quotes/382987a8-75ce-4037-b500-c475e08c1727**
activate D1
!if ($simplified != true)
D1-->>QS:200 Gotcha
!endif
deactivate QS
D1->D1:OK, I can see that there are going to be $payeeFee $payeeCurrency in charges.

== Sender Confirmation ==

!if ($advancedCoreConnectorFlow != true)
    D1-->PayerCC:Here's the quote for the transfer\nIt expires at $quotePayeeExpiration
    note right of PayerCC
    {
        "transferId": "$transferId",
            "homeTransactionId": "$homeTransactionId",
            "from": {
                "dateOfBirth": "$senderDOB",
                "displayName": "$senderName",
                "firstName": "$senderFirstName",
                "middleName": "$senderMiddleName",
                "lastName": "$senderLastName"
                "fspId": "$payerFSPID",
                "idType": "MSISDN",
                "idValue": "$payerMSISDN"
            },
            "to": {
                "type": "CONSUMER",
                "idType": "MSISDN",
                "idValue": "$payeeMSISDN",
                "displayName": "$receiverName",
                "firstName": "$receiverFirstName",
                "middleName": "$receiverMiddleName",
                "lastName": "$receiverLastName"
                "dateOfBirth": "$receiverDOB",

                "fspId": "$payeeFSPID"
                "supportedCurrencies": [ "$payeeCurrency" ]
                "kycInformation": "<Encrypted KYC Data>"
            },
            "amountType": "SEND",
            "currency": "$payerCurrency",
            "amount": "$payerSendAmount"
            "currentState": "**WAITING_FOR_QUOTE_ACCEPTANCE**",
            "getPartiesResponse": {
                <Same as the previous responses>
            },
            "conversionRequestId": "$conversionRequestId",
            "fxQuotesResponse": {
                <Same as the previous responses>
            },
            "fxQuotesResponseSource": "$payeeFSPID",
            "quoteId": "$quoteId",
            "quoteResponse": {
                "body": {
                    "transferAmount": {
                        "currency": "$payeeCurrency",
                        "amount": "$targetAmount"
                    },
                    "payeeReceiveAmount": {
                        "currency": "$payeeCurrency",
                        "amount": "$payeeReceiveAmount"
                    },
                    "payeeFspFee": {
                        "currency": "$payeeCurrency",
                        "amount": "$payeeFee"
                    },
                    "expiration": "$quotePayeeExpiration",
                    "ilpPacket": "
                        <This is encoded transaction object. It contains data from quote request and response.>
                    ",
                    "condition": "$condition"
                },
                "headers": {}
            },
            "quoteResponseSource": "$payeeFSPID",
        }
    end note
!else
   D1-->PayerCC:Here's the quote for the transfer\nIt expires at $quotePayeeExpiration
    !if ($simplified != true)
        note right of PayerCC
        {
            "quotes": {
                "body": {
                    "transferAmount": {
                        "currency": "$payeeCurrency",
                        "amount": "$targetAmount"
                    },
                    "payeeReceiveAmount": {
                        "currency": "$payeeCurrency",
                        "amount": "$payeeReceiveAmount"
                    },
                    "payeeFspFee": {
                        "currency": "$payeeCurrency",
                        "amount": "$payeeFee"
                    },
                    "expiration": "$quotePayeeExpiration",
                    "ilpPacket": "
                        <This is encoded transaction object. It contains data from quote request and response.>
                    ",
                    "condition": "$condition"
                },
                "headers": {}
            },
            "currentState": "COMPLETED"
        }
        end note
    !endif
!endif
PayerCC->PayerCBS:Here's the quote
PayerCBS->A1:Hi, $senderName: I can do the transfer.\nIt'll cost you $totalChargesSourceCurrency $payerCurrency($totalChargesTargetCurrency $payeeCurrency) in fees\nand $receiverName will receive\n$payeeReceiveAmount $payeeCurrency.\nLet me know if you want to go ahead
A1->PayerCBS:Great! Yes please, go ahead

PayerCBS->PayerCC: Payer has accepted the terms please proceed

@enduml